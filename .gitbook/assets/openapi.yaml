openapi: 3.0.0
info:
  title: Rownd API
  version: 1.0.0
tags:
  - name: applications
  - name: application_creds
  - name: application_schemas
servers:
  - url: https://api.us-east-2.dev.rownd.io
    description: Rownd development environment
  - url: https://api.rownd.io
    description: Rownd production environment
security:
  - auth0: []
  - hubAccessTokenForRowndApi: []
paths:
  /applications:
    post:
      operationId: application_create
      tags:
        - applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '201':
          description: Application created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'

  /applications/{app}:
    get:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
          example: test-app-1
      operationId: application_get
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - serviceAccountToken: []
      tags:
        - applications
      responses:
        '200':
          description: Retrieved application successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
    patch:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
          example: test-app-1
      operationId: application_update
      tags:
        - applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateReq'
      responses:
        '200':
          description: Retrieved application successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
    delete:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
          example: test-app-1
      operationId: application_delete
      tags:
        - applications
      responses:
        '204':
          description: Application deleted successfully

  /applications/{app}/public:
    get:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
      operationId: application_get_public_meta
      tags:
        - applications
      security:
        - none: []
      responses:
        '200':
          description: The public-facing version of an application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPublic'

  /applications/{app}/icon:
    put:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
      operationId: application_icon_update
      tags:
        - applications
      requestBody:
        content:
          image/png:
            schema:
              type: object
              format: binary
          image/svg:
            schema:
              type: object # This should technically be a string, but Fastify / Ajv doesn't seem to be happy with validation when it is.
              format: binary
      responses:
        '200':
          description: The image was accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationIcon'

  /applications/{app}/verify-email-image:
    put:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
      operationId: application_verify_email_image_update
      tags:
        - applications
      x-required-role:
        - none
      requestBody:
        content:
          image/png:
            schema:
              type: object
              format: binary
          image/svg:
            schema:
              type: object # This should technically be a string, but Fastify / Ajv doesn't seem to be happy with validation when it is.
              format: binary
      responses:
        '200':
          description: The image was accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVerifyEmailImage'

  /applications/{app}/creds:
    parameters:
      - name: app
        in: path
        required: true
        schema:
          type: string
        example: test-app-1
    get:
      operationId: application_creds_list
      tags:
        - application_creds
      responses:
        '200':
          description: Retrieved application credentials successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCredentialList'
    post:
      operationId: application_creds_create
      tags:
        - application_creds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCredential'
      responses:
        '201':
          description: Created application credentials successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCredential'

  /applications/{app}/creds/{client_id}:
    parameters:
      - name: app
        in: path
        required: true
        schema:
          type: string
        example: test-app-1
      - name: client_id
        in: path
        required: true
        schema:
          type: string
        example: fe6cc150-d7c1-443a-80c8-12fcf89e65e2
    get:
      operationId: application_creds_get
      tags:
        - application_creds
      responses:
        '200':
          description: Retrieved application credential successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCredential'
    patch:
      operationId: application_creds_update
      tags:
        - application_creds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCredential'
      responses:
        '200':
          description: Updated application credentials successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCredential'
    delete:
      operationId: application_creds_delete
      tags:
        - application_creds
      responses:
        '204':
          description: Application credential deleted successfully

  /applications/{app}/schema:
    get:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
          example: test-app-1
      operationId: application_schema_get
      security:
        - auth0: []
        - serviceAccountToken: []
        - hubKey: []
        - hubAccessTokenForRowndApi: []
      tags:
        - application_schemas
      responses:
        '200':
          description: Retrieved application schema successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSchemaResponse'

    put:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
          example: test-app-1
      operationId: application_schema_update
      tags:
        - application_schemas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationSchemaResponse'
      responses:
        '200':
          description: Updated application schema successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSchemaResponse'

  /applications/{app}/users/association:
    x-rownd-visibility: private
    post:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
      operationId: application_user_associate
      x-required-role:
        - none # Enforced at the route level due to some custom requirements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssociationRequest'
      responses:
        '200':
          description: User successfully associated with application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssociationResponse'
        '403':
          description: User verification challenge failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /applications/{app}/users/data:
    get:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: string
        - name: lookup_filter
          in: query
          schema:
            type: string
          description: |
            The values of verification fields to filter by (e.g., email, phone number).
            Depends on what verification method is used by the underlying application. This is a
            comma-separated list of values.
          example: 'jsmith@test.org'
        - name: id_filter
          in: query
          schema:
            type: string
          description: |
            A comma-separated list of user IDs to filter by. If any ID is not found, it will be excluded from the response.
      operationId: application_user_data_list
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - appKey: []
        - appSecret: []
        - serviceAccountToken: []
      responses:
        '200':
          description: User records retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserDataList'

  /applications/{app}/users/__sample__/data:
    get:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
      operationId: application_user_sample_data_get
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - appKey: []
        - appSecret: []
      responses:
        '200':
          description: User record retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserData'

  /applications/{app}/users/{user}/data:
    get:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: string
      operationId: application_user_data_get
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - appKey: []
        - appSecret: []
        - serviceAccountToken: []
      responses:
        '200':
          description: User record retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserData'

    put:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      operationId: application_user_data_upsert
      description: |
        Inserts or updates user data. If Rownd should generate its own ID for this record,
        set `__uuid__` as the `user` path parameter.
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - appKey: []
        - appSecret: []
        - serviceAccountToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppUserData'
      responses:
        '200':
          description: User record updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserData'

    patch:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      operationId: application_user_data_patch
      description: |
        Updates user data.
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - appKey: []
        - serviceAccountToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppUserData'
      responses:
        '200':
          description: User record updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserData'

    delete:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
        - name: user
          in: path
          required: true
          schema:
            type: string
      operationId: application_user_data_delete
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - appKey: []
        - appSecret: []
      responses:
        '204':
          description: User record deleted successfully

  /applications/{app}/users/{user}/data/fields/{field}:
    parameters:
      - name: app
        in: path
        required: true
        schema:
          type: string
      - name: user
        in: path
        required: true
        schema:
          type: string
      - name: field
        in: path
        required: true
        schema:
          type: string

    get:
      parameters:
        - name: preview
          in: query
          required: false
          schema:
            type: string
            enum:
              - small
              - medium
              - large
          description: Return an image thumbnail of the resource
        - name: fail_on_error
          in: query
          required: false
          schema:
            type: string
          description: Return a 403 status code if the field is unshared by the user
      operationId: application_user_data_field_get
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - appKey: []
        - appSecret: []
      responses:
        '200':
          description: The value of the data field
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
            '*/*':
              schema:
                type: string
                format: binary
    put:
      operationId: application_user_data_field_update
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                value:
                  type: string
              required:
                - value
          application/json:
            schema:
              properties:
                value: {}
              required:
                - value
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - appKey: []
        - appSecret: []
      responses:
        '200':
          description: The value of the data field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserData'

  /applications/{app}/users/{user}/acls:
    parameters:
      - name: app
        in: path
        required: true
        schema:
          type: string
      - name: user
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: application_user_acls_get
      responses:
        '200':
          description: User ACLs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserACLs'
    put:
      operationId: application_user_acls_upsert
      tags:
        - me
      x-required-role:
        - none
      security:
        - auth0: []
        - hubAccessToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserACLs'
      responses:
        '200':
          description: User ACLs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserACLs'

  /applications/{app}/forms:
    parameters:
      - name: app
        in: path
        schema:
          type: string
        required: true
    get:
      operationId: app_form_list
      tags:
        - forms
      responses:
        '200':
          description: Form list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppFormList'

    post:
      operationId: app_form_create
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppForm'
      responses:
        '200':
          description: Form created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppForm'

  /applications/{app}/forms/{form}:
    parameters:
      - name: app
        in: path
        schema:
          type: string
        required: true
      - name: form
        in: path
        schema:
          type: string
        required: true
    get:
      operationId: app_form_get
      tags:
        - forms
      responses:
        '200':
          description: Form retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppForm'

    put:
      operationId: app_form_update
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppForm'
      responses:
        '200':
          description: Form updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppForm'

    delete:
      operationId: app_form_delete
      tags:
        - forms
      responses:
        '200':
          description: Form deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppForm'

  /forms/{form}:
    parameters:
      - name: form
        in: path
        schema:
          type: string
        required: true
    get:
      operationId: form_get
      description: Retrieve a published form for display on a website, etc
      tags:
        - forms
      x-required-role:
        - none
      security:
        - none: []
      responses:
        '200':
          description: Form retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppForm'

  /forms/{form}/data:
    parameters:
      - name: form
        in: path
        schema:
          type: string
        required: true
    post:
      operationId: form_data_submit
      description: Submit user data for a given form
      tags:
        - forms
      x-required-role:
        - none
      security:
        - formKey: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppFormData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppFormData'
      responses:
        '201':
          description: Form data submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppFormData'

  /accounts:
    get:
      operationId: account_list
      tags:
        - accounts
      x-required-role:
        - none
      responses:
        '200':
          description: Accounts retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
    post:
      operationId: account_create
      tags:
        - accounts
      x-required-role:
        - none
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

  /accounts/quick-setup:
    post:
      operationId: account_quick_setup
      tags:
        - accounts
      x-required-role:
        - none
      responses:
        '200':
          description: Account set up successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSetupResponse'

  /accounts/{account}:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: account_get
      tags:
        - accounts
      responses:
        '200':
          description: Summary of account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

    patch:
      operationId: account_update
      tags:
        - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: Summary of account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'

  /accounts/{account}/invoices:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_invoice_list
      tags:
        - accounts
        - invoices
      responses:
        '200':
          description: Invoices retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'

  /accounts/{account}/invoices/{invoice}:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: invoice
          in: path
          required: true
          schema:
            type: string
      operationId: account_invoice_get
      tags:
        - accounts
        - invoices
      responses:
        '200':
          description: Invoice retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'

  /accounts/{account}/payment-methods:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_payment_method_list
      tags:
        - accounts
        - payment-methods
      responses:
        '200':
          description: Payment methods list retrieved Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodList'

    post:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_payment_method_attach
      tags:
        - accounts
        - payment-methods
      requestBody:
        content:
          application/json:
            schema:
              properties:
                payment_method_id:
                  type: string
      responses:
        '204':
          description: Successfully attached payment method to account

  /accounts/{account}/payment-methods/{payment_method}:
    delete:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: payment_method
          in: path
          required: true
          schema:
            type: string
      operationId: account_payment_method_delete
      tags:
        - accounts
        - payment-methods
      responses:
        '204':
          description: Successfully removed payment method on account

  /accounts/{account}/payment-methods/default:
    put:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_payment_method_default_update
      tags:
        - accounts
        - payment-methods
      requestBody:
        content:
          application/json:
            schema:
              properties:
                payment_method_id:
                  type: string
      responses:
        '204':
          description: Successfully updated default payment

  /accounts/{account}/subscription:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_subscription_get
      tags:
        - accounts
        - subscription
      responses:
        '201':
          description: Successfully created subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

    post:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_subscription_create
      tags:
        - accounts
        - subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '201':
          description: Successfully created subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    delete:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_subscription_delete
      tags:
        - accounts
        - subscription
      responses:
        '204':
          description: Successfully canceled subscription
    put:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_subscription_update
      tags:
        - accounts
        - subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        '204':
          description: Successfully changed subscription

  /accounts/{account}/subscription/coupon:
    put:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_coupon_redeem
      tags:
        - accounts
        - coupon
      requestBody:
        content:
          application/json:
            schema:
              required:
                - promotion_code
              properties:
                promotion_code:
                  type: string
      responses:
        '204':
          description: Successfully applied coupon

  /accounts/{account}/subscription/coupons/{promotion_code}:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: promotion_code
          in: path
          required: true
          schema:
            type: string
      operationId: account_coupon_get
      tags:
        - accounts
        - coupon
      responses:
        '200':
          description: Promotion code is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'

  /accounts/{account}/applications:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
          example: test-app-1
      operationId: application_list
      tags:
        - applications
      responses:
        '200':
          description: List of applications for account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'

  /accounts/{account}/teams/default/members:
    get:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_team_members_list
      tags:
        - accounts
        - teams
      responses:
        '200':
          description: List of team members in the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberList'

  /accounts/{account}/teams/default/members/{member}:
    patch:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: member
          in: path
          required: true
          schema:
            type: string
      operationId: account_team_member_update
      x-required-role:
        - admin
      tags:
        - accounts
        - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMember'
      responses:
        '200':
          description: Team member updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMember'

    delete:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
        - name: member
          in: path
          required: true
          schema:
            type: string
      operationId: account_team_member_delete
      x-required-role:
        - admin
      tags:
        - accounts
        - teams
      responses:
        '204':
          description: Successfully removed the member from the team

  /accounts/{account}/teams/default/invitations:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string

    post:
      operationId: account_team_member_invite
      x-required-role:
        - admin
      tags:
        - accounts
        - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMemberInvitationRequest'
      responses:
        '204':
          description: Successfully invited a member to the team

  /accounts/{account}/teams/default/invitations/accept:
    x-rownd-visibility: private
    post:
      parameters:
        - name: account
          in: path
          required: true
          schema:
            type: string
      operationId: account_team_member_invite_accept
      x-required-role:
        - none
      tags:
        - accounts
        - teams
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Team invitation accepted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamInvitationResponse'

  /teams/invitation:
    x-rownd-visibility: private
    parameters:
      - name: x-rownd-invite-token
        in: header
        required: true
        schema:
          type: string
    get:
      operationId: account_team_invitation_get
      x-required-role:
        - none
      tags:
        - accounts
        - teams
      responses:
        '200':
          description: Invitation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamInvitationConsentInfo'

    post:
      operationId: account_team_member_invite_process
      x-required-role:
        - none
      tags:
        - accounts
        - teams
      requestBody:
        content:
          application/json:
            schema:
              required:
                - action
              properties:
                action:
                  type: string
                  enum:
                    - accept
                    - decline
      responses:
        '200':
          description: Team invitation accepted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamInvitationResponse'

        '204':
          description: Team invitation declined successfully

  /me:
    get:
      operationId: my_profile_get
      tags:
        - me
      x-required-role:
        - none
      security:
        - auth0: []
        - hubAccessToken: []
      responses:
        '200':
          description: The current user's profile information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

    patch:
      operationId: my_profile_update
      tags:
        - me
      x-required-role:
        - none
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: Successfully updated the current user's profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  # /me/settings:
  #   get:
  #     operationId: my_settings_get
  #     tags:
  #     - me

  /me/settings/mfa:
    get:
      operationId: my_settings_mfa_status
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: The current user's multi-factor authentication status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMFAStatus'
    post:
      operationId: my_settings_mfa_enable
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: Generated a two-factor init token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMFALink'

    delete:
      operationId: my_settings_mfa_disable
      tags:
        - me
      x-required-role:
        - none
      responses:
        '204':
          description: The current user's multi-factor authentication enrollment has been deleted.

  /me/applications:
    get:
      operationId: my_applications_list
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: List of the current user's associated applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApplicationList'

  /me/applications/{app}:
    parameters:
      - name: app
        in: path
        required: true
        schema:
          type: string
        example: test-app-1
    get:
      operationId: my_application_get
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: An application associated to the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApplication'

  /me/applications/{app}/schema:
    parameters:
      - name: app
        in: path
        required: true
        schema:
          type: string
        example: test-app-1
    get:
      operationId: my_application_schema_get
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: Retrieved application schema successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSchemaResponse'

  /me/applications/{app}/data:
    parameters:
      - name: app
        in: path
        required: true
        schema:
          type: string
        example: test-app-1
    get:
      operationId: my_application_data_get
      security:
        - auth0: []
        - hubAccessToken: []
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: The current user's data collected/stored by an application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserData'
    put:
      operationId: my_application_data_update
      security:
        - auth0: []
        - hubAccessToken: []
      tags:
        - me
      x-required-role:
        - none
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserData'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppUserData'
      responses:
        '200':
          description: Data successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserData'

  /me/applications/{app}/data/fields/{field}:
    parameters:
      - name: app
        in: path
        required: true
        schema:
          type: string
      - name: field
        in: path
        required: true
        schema:
          type: string

    get:
      parameters:
        - name: preview
          in: query
          required: false
          schema:
            type: string
            enum:
              - small
              - medium
              - large
      operationId: my_application_data_field_get
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: The value of the data field
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
            '*/*':
              schema:
                type: string
                format: binary


    put:
      operationId: my_application_data_field_update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                value:
                  type: string
              required:
                - value
          application/json:
            schema:
              properties:
                value: {}
              required:
                - value
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: The value of the data field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserData'

  /me/applications/{app}/acls:
    get:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
      operationId: my_application_acls_get
      security:
        - auth0: []
        - hubAccessToken: []
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: User ACLs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserACLs'
    put:
      parameters:
        - name: app
          in: path
          required: true
          schema:
            type: string
      operationId: my_application_acls_update
      security:
        - auth0: []
        - hubAccessToken: []
      tags:
        - me
      x-required-role:
        - none
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserACLs'
      responses:
        '200':
          description: User ACLs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserACLs'

  /me/applications/data/claim:
    post:
      parameters:
        - name: app
          description: An ID for an application that should be explicitly checked for claims.
          in: query
          required: false
          schema:
            type: string
      operationId: my_application_data_claim
      description: Checks for unclaimed data matching the user's verified information and associates it with their account.
      tags:
        - me
      x-required-role:
        - none
      responses:
        '200':
          description: Claims checked and completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserClaimResponse'

  /hub/app-config:
    get:
      operationId: hub_app_config_get
      description: Retrieves the configuration for the hub.
      tags:
        - hub
      x-required-role:
        - none
      security:
        - hubKey: []
      responses:
        '200':
          description: The hub configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubConfig'

  /hub/auth/init:
    post:
      operationId: hub_auth_init
      tags:
        - hub
      security:
        - hubKey: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                return_url:
                  type: string
                email:
                  type: string
                  description: email
                phone:
                  type: string
                  description: phone
                user_id:
                  type: string
                  description: bring your own user id
                requested_fields:
                  type: object
                  additionalProperties: true
                user_data:
                  type: object
                  additionalProperties: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  challenge_id:
                    type: string
                  message:
                    type: string
                  auth_tokens:
                    type: object
                    description: Present only when the app allows unverified users and the current one isn't already in the system.
                    properties:
                      refresh_token:
                        type: string
                      access_token:
                        type: string
                  init_data:
                    type: object
                    additionalProperties: true
                    description: Present only when the app allows unverified users and the current one isn't already in the system.
                additionalProperties: true

  /hub/auth/challenge_status:
    post:
      operationId: hub_auth_challenge_status
      tags:
        - hub
      security:
        - hubKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - challenge_id
              properties:
                challenge_id:
                  type: string
                email:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  app_user_id:
                    type: string
                  app_id:
                    type: string
                  access_token:
                    type: string
                  refresh_token:
                    type: string

  /hub/auth/complete:
    post:
      operationId: hub_auth_complete
      tags:
        - hub
      security:
        - none: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
                - challenge_id
              properties:
                token:
                  type: string
                challenge_id:
                  type: string
                email:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  redirect_url:
                    type: string
                additionalProperties: true

  /hub/auth/token:
    post:
      operationId: hub_auth_token
      tags:
        - hub
      security:
        - none: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true

  /hub/auth/keys:
    get:
      operationId: hub_auth_keys
      tags:
        - hub
      security:
        - none: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: object
                      additionalProperties: true

  /hub/auth/.well-known/oauth-authorization-server:
    get:
      operationId: hub_auth_wellknown_oauth_authorization_server
      tags:
        - hub
      security:
        - none: []
      responses:
        '200':
          description: 'Return OAuth 2.0 metadata'
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true

  /hub/auth/magic:
    post:
      operationId: hub_auth_magic_create
      description: Generate a magic link
      security:
        - hubKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                verification_mode:
                  enum:
                    - email
                    - phone
                data:
                  type: object
                  additionalProperties: true
                redirect_url:
                  type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                  app_user_id:
                    type: string

  /hub/auth/magic/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: The magic link identifier
          required: true
          schema:
            type: string
      operationId: hub_auth_magic_complete
      security:
        - none: []
      responses:
        '302':
          content: {}
          description: Redirects to proxied_url

  /users/signup:
    x-rownd-visibility: private
    post:
      operationId: user_signup
      tags:
        - users
      security:
        - none: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignupRequest'
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/signup/init:
    x-rownd-visibility: private
    post:
      operationId: user_signup_init
      tags:
        - users
      security:
        - none: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              properties:
                email:
                  type: string
                app_id:
                  type: string
                verification_url:
                  type: string
                  format: uri
      responses:
        '204':
          description: Signup via email initiated successfully

  /users/signup/verify:
    x-rownd-visibility: private
    post:
      operationId: user_signup_verify
      tags:
        - users
      security:
        - none: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                verification_token:
                  type: string
      responses:
        '200':
          description: Verification token is valid
          content:
            application/json:
              schema:
                properties:
                  token_ok:
                    type: boolean
                  email:
                    type: string

  /users/signup/complete:
    x-rownd-visibility: private
    post:
      operationId: user_signup_complete
      tags:
        - users
      x-required-role:
        - none
      requestBody:
        content:
          application/json:
            schema:
              properties:
                verification_token:
                  type: string
      responses:
        '204':
          description: User signup completed successfully

  /users/login-strategies:
    x-rownd-visibility: private
    get:
      parameters:
        - name: client_id
          in: query
          schema:
            type: string
          required: true
        - name: redirect_uri
          in: query
          schema:
            type: string
          required: false
      operationId: user_login_strategies
      tags:
        - users
      security:
        - none: []
      responses:
        '200':
          description: Available login strategies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginStrategies'

  /users/email-insights:
    x-rownd-visibility: private
    get:
      parameters:
        - name: email
          in: query
          schema:
            type: string
      operationId: user_email_insights
      tags:
        - misc
      security:
        - none: []
      responses:
        '200':
          description: Insights on the provided email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailInsights'

  /plans:
    x-rownd-visibility: private
    get:
      operationId: plan_list
      tags:
        - misc
      security:
        - none: []
      responses:
        '200':
          description: Available subscription plans
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingPlanList'

  /integrations/connectors:
    get:
      parameters:
        - name: name
          in: query
          schema:
            type: string
      operationId: connector_list
      x-required-role:
        - none
      tags:
        - integrations
      responses:
        '200':
          description: Available integration connectors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorList'

  /integrations/connectors/{connector}/actions:
    parameters:
      - name: connector
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: connector_action
      x-required-role:
        - none
      tags:
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAction'
      responses:
        '200':
          description: Successfully executed action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionActionResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /accounts/{account}/integrations/connections:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: connection_list
      parameters:
        - name: connector
          in: query
          schema:
            type: string
      x-required-role:
        - admin
        - editor
      tags:
        - integrations
      responses:
        '200':
          description: Successfully retrieved configured connections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionList'

    post:
      operationId: connection_create
      x-required-role:
        - admin
        - editor
      tags:
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      responses:
        '200':
          description: Successfully created connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'

  /accounts/{account}/integrations/connections/applications:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: application_connections_list
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - serviceAccountToken: []
      tags:
        - applications
        - integrations
      responses:
        '200':
          description: List of applications by their connections
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApplicationConnectionMap'
                  total_results:
                    type: integer

  /accounts/{account}/integrations/connections/{connection}:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
      - name: connection
        in: path
        required: true
        schema:
          type: string

    get:
      operationId: connection_get
      x-required-role:
        - admin
        - editor
      tags:
        - integrations
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - serviceAccountToken: []
      responses:
        '200':
          description: Successfully retrieved connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'

    put:
      operationId: connection_update
      x-required-role:
        - admin
        - editor
      tags:
        - integrations
      security:
        - auth0: []
        - hubAccessTokenForRowndApi: []
        - serviceAccountToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      responses:
        '200':
          description: Successfully updated connection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'

    delete:
      operationId: connection_delete
      x-required-role:
        - admin
        - editor
      tags:
        - integrations
      responses:
        '204':
          description: Successfully deleted connection

  /accounts/{account}/integrations/connections/{connection}/actions:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
      - name: connection
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: connection_action
      x-required-role:
        - admin
        - editor
      tags:
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAction'
      responses:
        '200':
          description: Successfully executed action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionActionResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /accounts/{account}/integrations/connections/{connection}/notify:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
      - name: connection
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: connection_notify
      security:
        - none: []
      tags:
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionNotifyRequest'
      responses:
        '200':
          description: Successfully notified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionNotifyResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /accounts/{account}/integrations/connections/{connection}/attach:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
      - name: connection
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: connection_attach
      tags:
        - applications
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionAttachRequest'
      responses:
        '200':
          description: Successfully attached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionAttachResponse'

  /accounts/{account}/integrations/connections/{connection}/detach:
    parameters:
      - name: account
        in: path
        required: true
        schema:
          type: string
      - name: connection
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: connection_detach
      tags:
        - applications
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDetachRequest'
      responses:
        '200':
          description: Successfully attached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionDetachResponse'


components:
  securitySchemes:
    auth0:
      type: openIdConnect
      openIdConnectUrl: https://dev-ddkad7um.auth0.com/.well-known/openid-configuration
    appKey:
      type: apiKey
      in: header
      name: x-rownd-app-key
    appSecret:
      type: apiKey
      in: header
      name: x-rownd-app-secret
    formKey:
      type: apiKey
      in: header
      name: x-rownd-form-key
    hubKey:
      type: apiKey
      in: header
      name: x-rownd-hub-key
    hubAccessToken:
      type: openIdConnect
      openIdConnectUrl: https://rownd.io/.well-known/openid-configuration
    hubAccessTokenForRowndApi:
      type: openIdConnect
      openIdConnectUrl: https://rownd.io/.well-known/openid-configuration
    serviceAccountToken:
      type: http
      scheme: bearer
    none:
      type: http
      scheme: none
      description: No security is required for this API.

  schemas:
    Error:
      properties:
        statusCode:
          type: number
        error:
          type: string
        message:
          type: string
        messages:
          type: array
          items:
            type: string


    Account:
      required:
        - name
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        stripe_customer_id:
          type: string
          readOnly: true
        owner:
          readOnly: true
          type: string
        owner_url:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    AccountSetupResponse:
      properties:
        account:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
        application:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            credential:
              type: object
              properties:
                client_id:
                  type: string


    AccountList:
      properties:
        total_results:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/Account'

    Invoice:
      properties:
        id:
          type: string
        hosted_invoice_url:
          type: string
        invoice_pdf:
          type: string
        period_start:
          type: string
        period_end:
          type: string

    InvoiceList:
      properties:
        total_results:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'

    BillingDetails:
      properties:
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        address:
          $ref: '#/components/schemas/Address'

    Address:
      properties:
        city:
          type: string
        country:
          type: string
        line1:
          type: string
        line2:
          type: string
        postal_code:
          type: string
        state:
          type: string

    Card:
      properties:
        brand:
          type: string
        country:
          type: string
        exp_month:
          type: integer
        exp_year:
          type: integer
        last4:
          type: string

    PaymentMethod:
      properties:
        id:
          type: string
        billing_details:
          $ref: '#/components/schemas/BillingDetails'
        card:
          $ref: '#/components/schemas/Card'

    PaymentMethodList:
      properties:
        total_results:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'

    Subscription:
      properties:
        id:
          type: string
        status:
          type: string
        trial_start:
          type: string
        trial_end:
          type: string
        discount:
          $ref: '#/components/schemas/Discount'
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              product:
                type: string
              currency:
                type: string
              unit_amount:
                type: number
              plan:
                $ref: '#/components/schemas/PricingPlan'

    SubscriptionRequest:
      required:
        - price_id
      properties:
        price_id:
          type: string
        promotion_code:
          type: string

    TeamMember:
      required:
        - role
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
          enum:
            - active
            - inactive
            - pending
        name:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        role:
          type: string
          enum:
            - admin
            - editor
            - viewer
        user:
          type: object
          additionalProperties: true
          readOnly: true
        user_url:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    TeamMemberList:
      properties:
        total_results:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'

    TeamMemberInvitationRequest:
      properties:
        email:
          type: string
        role:
          type: string
          default: viewer
          enum:
            - admin
            - editor
            - viewer
        invitation_consent_url:
          type: string
          format: uri
          description: The URL to the UI presenting the user with information about the invitation and the option to accept or decline it.

    TeamInvitationResponse:
      properties:
        id:
          type: string
        account_name:
          type: string
          readOnly: true
        account:
          type: string
          readOnly: true
        account_url:
          type: string
          readOnly: true

    TeamInvitationConsentInfo:
      properties:
        id:
          type: string
          readOnly: true
        account_name:
          type: string
          readOnly: true
        team_name:
          type: string
          readOnly: true

    Application:
      required:
        - name
        - account
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        slug:
          type: string
          readOnly: true
        description:
          type: string
        icon:
          type: string
          format: uri
          readOnly: true
          x-rownd-modifier: rewriteAssetUrl
        connections:
          type: array
          items:
            $ref: '#/components/schemas/AppConnection'
        config:
          type: object
          $ref: '#/components/schemas/ApplicationConfig'
        account:
          type: string
          readOnly: true
        account_url:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    ApplicationConfig:
      type: object
      additionalProperties: false
      properties:
        customizations:
          type: object
          $ref: '#/components/schemas/AppCustomizationsConfig'
        hub:
          type: object
          $ref: '#/components/schemas/AppHubConfig'

    AppCustomizationsConfig:
      properties:
        primary_color:
          type: string

    AppHubConfig:
      properties:
        customizations:
          type: object
          properties:
            rounded_corners:
              type: boolean
              default: true
            placement:
              type: string
              description: placement of the hub within the browser
            offset_y:
              type: number
              description: vertical offset of the hub in pixels
            offset_x:
              type: number
              description: horizontal offset of the hub in pixels
            primary_color:
              type: string
              description: hub primary color override
        auth:
          type: object
          properties:
            allow_unverified_users:
              type: boolean
            audience:
              type: array
              items:
                type: string
            additional_fields:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
                    enum:
                      - select
                      - text
                  label:
                    type: string
                  options:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                        label:
                          type: string
            email:
              type: object
              properties:
                from_address:
                  type: string
                image:
                  type: string
                  readOnly: true
                  x-rownd-modifier: rewriteAssetUrl

    HubConfig:
      properties:
        app:
          type: object
          properties:
            id:
              type: string
            schema:
              type: object
              $ref: '#/components/schemas/ApplicationSchema'
            user_verification_field:
              type: string
            user_verification_fields:
              type: array
              items:
                type: string
            icon:
              type: string
              format: uri
              x-rownd-modifier: rewriteAssetUrl
            config:
              type: object
              $ref: '#/components/schemas/ApplicationConfig'

    ApplicationUpdateReq:
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
        connections:
          type: array
          items:
            $ref: '#/components/schemas/AppConnection'
        config:
          type: object
          $ref: '#/components/schemas/ApplicationConfig'

    ApplicationPublic:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        slug:
          type: string
          readOnly: true
        description:
          type: string
        icon:
          type: string
          format: uri
          readOnly: true
          x-rownd-modifier: rewriteAssetUrl

    ApplicationList:
      properties:
        total_results:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/Application'

    UserApplication:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        slug:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        icon:
          type: string
          format: uri
          readOnly: true
          x-rownd-modifier: rewriteAssetUrl

    UserApplicationList:
      properties:
        total_results:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserApplication'

    ApplicationIcon:
      properties:
        icon:
          type: string
          format: uri
          readOnly: true
          x-rownd-modifier: rewriteAssetUrl
        application:
          type: string
          readOnly: true
        application_url:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true

    ApplicationVerifyEmailImage:
      properties:
        image:
          type: string
          format: uri
          readOnly: true
          x-rownd-modifier: rewriteAssetUrl
        application:
          type: string
          readOnly: true
        application_url:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true

    ApplicationCredential:
      required:
        - name
      properties:
        name:
          type: string
        client_id:
          type: string
          readOnly: true
        client_secret:
          type: string
          readOnly: true
        expires:
          type: string
          format: date-time
        form:
          type: string
          description: ID of the applicable form
        form_url:
          type: string
          readOnly: true
        application:
          type: string
          readOnly: true
        application_url:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    ApplicationCredentialList:
      properties:
        total_results:
          type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationCredential'

    ApplicationSchema:
      properties: {}
      additionalProperties:
        type: object
        required:
          - type
          - display_name
          - data_category
          - owned_by
          - collection_justification
        properties:
          display_name:
            type: string
          type:
            type: string
            default: string
            enum:
              - string
              - boolean
              - number
              - image
              - document
              - object
              - any
              - null
          data_category:
            type: string
            enum:
              - pii_basic
              - pii_advanced
              - demographic
              - location
              - history
              - app_basic
              - custom
              # FUTURE:
              #- health
              #- financial
          required:
            type: boolean
            default: false
          owned_by:
            type: string
            enum:
              - user
              - app
            default: user
          user_visible:
            type: boolean
            default: true
          revoke_after:
            type: string
            enum:
              - 1 hour
              - 1 day
              - 1 week
              - 1 month
              - 6 months
              - 1 year
              - 3 years
              - never
          required_retention:
            type: string
            enum:
              - none
              - 1 hour
              - 1 day
              - 1 week
          example:
            type: string
          collection_justification:
            type: string
          opt_out_warning:
            type: string
          third_party_sharing:
            type: boolean
          third_party_explanation:
            type: string
          verified:
            type: boolean
          verified_by:
            type: string

    ApplicationSchemaResponse:
      required:
        - schema
      properties:
        user_verification_field:
          type: string
        user_verification_fields:
          type: array
          items:
            type: string
        schema:
          type: object
          $ref: '#/components/schemas/ApplicationSchema'
        application:
          type: string
          readOnly: true
        application_url:
          type: string
          readOnly: true
        url:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    AppForm:
      required:
        - name
      additionalProperties: false
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/AppFormField'
        collection_justification:
          description: Collates all of the collection justifications across form fields
          type: string
          readOnly: true
        application:
          type: string
          readOnly: true
        application_url:
          type: string
          readOnly: true
        data_use_labels:
          description: Must match data uses from app schema
          readOnly: true
          type: array
          items:
            type: string
        customizations:
          $ref: '#/components/schemas/AppFormCustomizations'
        url:
          type: string
          format: uri
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    AppFormList:
      type: object
      properties:
        total_results:
          type: number
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppForm'

    AppFormField:
      additionalProperties: false
      properties:
        name:
          description: Must match a schema property name
          type: string
        display_name:
          type: string
        placeholder:
          type: string
        collection_justification:
          type: string
          readOnly: true
        required:
          type: boolean
          readOnly: true
        type:
          type: string
          readOnly: true
        required_retention:
          type: string
          readOnly: true
        revoke_after:
          type: string
          readOnly: true

    AppFormCustomizations:
      additionalProperties: false
      properties:
        primary_color:
          type: string
        secondary_color:
          type: string
        submit_button_label:
          type: string
        show_form_title:
          type: boolean
          default: false

    AppFormData:
      additionalProperties: false
      properties:
        data:
          type: object
          additionalProperties: true

    UserSignupRequest:
      required:
        - first_name
        - last_name
        - email
        - password
      additionalProperties: false
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        verification_token:
          type: string

    User:
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        email_verified:
          type: boolean
          readOnly: true
        last_login:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    LoginStrategies:
      properties:
        total_results:
          type: number
        results:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              display_name:
                type: string
              login_url:
                type: string

    AppUserAssociationRequest:
      properties:
        challenge_field:
          type: string

    AppUserAssociationResponse:
      properties:
        application_user_id:
          type: string
          readOnly: true
        application:
          type: string
          readOnly: true
        application_url:
          type: string
          format: uri
          readOnly: true
        application_data_url:
          type: string
          format: uri
          readOnly: true

    AppUserDataList:
      properties:
        total_results:
          type: number
          readOnly: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppUserData'

    AppUserData:
      properties:
        rownd_user:
          type: string
          readOnly: true
        data:
          type: object
          additionalProperties: true
          x-rownd-modifier: generateUserDataObjectUrls
        connection_map:
          type: object
          $ref: '#/components/schemas/AppUserDataConnectionMap'
          readOnly: true
        redacted:
          readOnly: true
          type: array
          items:
            type: string
        revoke_after:
          readOnly: true
          type: object
          additionalProperties:
            type: string
        retain_until:
          readOnly: true
          type: object
          additionalProperties:
            type: string

    AppUserACLs:
      required:
        - acls
      properties:
        acls:
          type: object
          additionalProperties:
            type: object
            properties:
              shared:
                type: boolean
        user_id:
          type: string
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    AppUserDataConnectionMap:
      type: object
      additionalProperties:
        type: object
        properties:
          fields:
            type: object
            additionalProperties:
              type: object
              properties:
                in_sync:
                  type: boolean

    UserMFALink:
      properties:
        ticket_id:
          type: string
        ticket_url:
          type: string
          format: uri

    UserMFAStatus:
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - pending
            - confirmed
            - disabled
        enrolled_at:
          type: string
        last_auth:
          type: string
        type:
          type: string
        auth_method:
          type: string

    UserProfile:
      properties:
        id:
          type: string
          readOnly: true
        idp_type:
          type: string
          readOnly: true
          enum:
            - database
            - social
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string

    AppUserClaimResponse:
      properties:
        number_claimed:
          type: number
        apps:
          type: array
          items:
            type: string

    PricingPlan:
      properties:
        id:
          type: string
        name:
          type: string
        price_id:
          type: string
        starting_amount:
          type: number
        currency:
          type: string
        metadata:
          type: object
          properties:
            limits:
              type: object
              additionalProperties: true
            features:
              type: array
              items:
                type: string
            data_types:
              type: array
              items:
                type: string
            flags:
              type: object
              additionalProperties: true

    PricingPlanList:
      properties:
        plans:
          type: array
          items:
            $ref: '#/components/schemas/PricingPlan'

    Discount:
      properties:
        start:
          type: string
        end:
          type: string
        coupon:
          $ref: '#/components/schemas/Coupon'

    Coupon:
      properties:
        name:
          type: string
        amount_off:
          type: number
        duration:
          type: string
        duration_in_months:
          type: number
        percent_off:
          type: number

    ConnectorAuthFlow:
      type: object
      required:
        - type
        - config_fields
      properties:
        type:
          type: string
          enum:
            - oauth2
            - custom
        config_fields:
          type: array
          items:
            type: string
        options:
          type: object
          additionalProperties: true
          x-rownd-modifier: maskSensitiveValues

    ConnectorConfigStep:
      type: object
      required:
        - name
        - display_name
        - type
      properties:
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - auth
            - input
        auto_action:
          type: string
        supports_retrying:
          type: boolean
          default: true
        failure_content:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorConfigField'

    ConnectorConfigField:
      type: object
      properties:
        name:
          type: string
        label:
          type: string
        placeholder:
          type: string
        type:
          type: string
          enum:
            - text
            - password
            - select
            - checkbox
            - radio
            - textarea
            - list
        help:
          type: string
        required:
          type: boolean
        default_value:
          type: string
        deps:
          type: array
          items:
            type: string
        options:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        options_action:
          type: string
        items:
          type: object
          required:
          - fields
          properties:
            fields:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  label:
                    type: string
                  placeholder:
                    type: string
                  type:
                    type: string
                    enum:
                      - list
                      - text
                      - password
                      - select
                      - checkbox
                      - radio
                      - textarea
                  help:
                    type: string
                  required:
                    type: boolean
                  default_value:
                    type: string
                  deps:
                    type: array
                    items:
                      type: string
                  options:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                  options_action:
                    type: string

    Connector:
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
        documentation_url:
          type: string
        icon:
          type: string
          format: uri
        field_mapping_options_action:
          type: string
        config_schema:
          type: object
          format: json_schema
          additionalProperties: true
        meta:
          type: object
          properties:
            auth:
              type: object
              properties:
                default_flow:
                  type: string
                flows:
                  type: array
                  items:
                    $ref: '#/components/schemas/ConnectorAuthFlow'
            config_steps:
              type: array
              items:
                $ref: '#/components/schemas/ConnectorConfigStep'
            after_create_step:
              type: object
              required:
                - name
                - display_name
              properties:
                name:
                  type: string
                display_name:
                  type: string
                description:
                  type: string
                content:
                  type: string
                content_action:
                  type: string
            initialization_config:
              type: object
              properties:
                async:
                  type: boolean
                  default: false
                estimated_duration:
                  type: number
                  description: The estimated initialization duration in seconds
                total_steps:
                  type: number
                  description: The total number of initialization steps
            success_message:
              type: string
              description: A message that is displayed when a connection is created successfully. It can include templated config variables like {{config.variable_name}}
          additionalProperties: true

        sample_data_types:
          type: array
          description: A non-exhaustive list of data types that map to default Rownd-provided (or custom) data types.
          items:
            type: string

    ConnectorList:
      properties:
        total_results:
          type: number
        results:
          type: array
          items:
            $ref: '#/components/schemas/Connector'

    Connection:
      required:
        - name
        - connector
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        connector:
          type: string
        connector_url:
          type: string
          readOnly: true
        config:
          type: object
          additionalProperties: true
          x-rownd-modifier: maskSensitiveValues
        configuration_state:
          type: object
          required:
            - state
          properties:
            state:
              type: string
              enum:
                - created
                - initializing
                - destroying
                - completed
                - failed
            completed_steps:
              type: array
              items:
                type: string
            reason:
              type: string
        connection_url:
          type: string
          readOnly: true
          x-rownd-modifier: rewritePathToUrl
        application_url:
          type: string
          readOnly: true
          x-rownd-modifier: rewritePathToUrl
        data_type_map:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionDataTypeMap'
        account:
          type: string
          readOnly: true
        account_url:
          type: string
          format: uri
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true

    ConnectionList:
      properties:
        total_results:
          type: number
        results:
          type: array
          items:
            $ref: '#/components/schemas/Connection'

    ConnectionDataTypeMap:
      properties:
        connection_field:
          type: string
        rownd_field:
          type: string

    ConnectionNotifyRequest:
      type: object
      additionalProperties: true

    ConnectionNotifyResponse:
      type: object
      additionalProperties: true

    ConnectionAttachRequest:
      required:
        - application
        - data_type_map
      properties:
        application:
          type: string
          description: The application ID to which you want to attach this connection
        data_type_map:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionDataTypeMap'

    ConnectionAttachResponse:
      properties:
        result:
          type: string
          enum:
            - success
            - error
        messages:
          type: array
          items:
            type: string

    ConnectionDetachRequest:
      required:
        - application
      properties:
        application:
          type: string
          description: The application ID from which you want to detach this connection

    ConnectionDetachResponse:
      properties:
        result:
          type: string
          enum:
            - success
            - error
        messages:
          type: array
          items:
            type: string


    ConnectionAction:
      required:
        - action_type
      properties:
        action_type:
          type: string
          description: Connectors may provide arbitrary actions that can be invoked during the setup process of a particular connection.
        params:
          type: object
          additionalProperties: true

    ConnectionActionResult:
      properties:
        action_type:
          type: string
        result:
          type: string
          enum:
            - success
            - error
        messages:
          type: array
          items:
            type: string
        data:
          type: object
          additionalProperties: true

    AppConnection:
      required:
        - connection
      properties:
        connection:
          type: string
        data_type_map:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionDataTypeMap'

    ApplicationConnectionMap:
      type: object
      properties:
        connection:
          type: object
          properties:
            id:
              type: string
        application:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            icon:
              type: string
              format: uri
              x-rownd-modifier: rewriteAssetUrl

    EmailInsights:
      properties:
        is_gmail:
          type: boolean
